empcust1
tmp <- lapply(empcust1$pairs, twoWay)
tmp
# Count of customers per employee
empcust <- fread("C:/Users/IBM_ADMIN/Box Sync/ATB/Phase 2 Project/team_prototype/employee_cust.csv")
empcust[,N:=.N, by ="Employee"]
empcust
#
#empcust1 = empcust[,.(Employee=unlist(list(paste(Employee, collapse =" ")))),by=Customer]
empcust1 = empcust[,.(Employee=list(Employee)),by=Customer]
empcust1
empcust1[,pairs:=lapply(Employee, twoWay)]
empcust1
tmp <- strsplit(empcust1$pairs, "_")
tmp <- unlist(empcust1$pairs)
tmp
tmp
empcust2 <- data.table(Customer=rep(empcust1$Customer,
times=sapply(tmp,length)),
pairs=unlist(tmp))
tmp <- unlist(empcust1$pairs)
tmp
tmp <- empcust1$pairs
tmp
empcust2 <- data.table(Customer=rep(empcust1$Customer,
times=sapply(tmp,length)),
pairs=unlist(tmp))
empcust2
empcust2[,Npairs:=.N]
empcust2
empcust2[,Npairs:=.N, by=pairs]
empcust2
empcust <- fread("C:/Users/IBM_ADMIN/Box Sync/ATB/Phase 2 Project/team_prototype/employee_cust.csv")
empcust[,freqEmp:=.N, by ="Employee"]
empcust
#
empcust1 = empcust[,.(Employee=list(Employee)),by=Customer]
empcust1
# Count of customers per employee
empcust <- fread("C:/Users/IBM_ADMIN/Box Sync/ATB/Phase 2 Project/team_prototype/employee_cust.csv")
empcust[,freqEmp:=.N, by ="Employee"]
empcust
empcust <- fread("C:/Users/IBM_ADMIN/Box Sync/ATB/Phase 2 Project/team_prototype/employee_cust.csv")
empcust
#
empcust1 = empcust[,.(Employee=list(Employee)),by=Customer]
empcust1
empcust1[,pairs:=lapply(Employee, twoWay)]
tmp <- empcust1$pairs
empcust2 <- data.table(Customer=rep(empcust1$Customer,
times=sapply(tmp,length)),
pairs=unlist(tmp))
empcust2[,Npairs:=.N, by=pairs]
empcust2
empcust3 = rbind(empcust2[,.(Customer, Employee = strsplit(pairs, "_"), NPairs)])
empcust2
empcust3 = rbind(empcust2[,.(Customer, Employee = strsplit(pairs, "_"), Npairs)])
empcust3
empcust3 = rbind(empcust2[,.(Customer, Employee = strsplit(pairs, "_")[1], Npairs)])
empcust3
empcust3 = rbind(empcust2[,.(Customer, Employee = lapply(strsplit(pairs, "_"))[1], Npairs)])
empcust3 = empcust2[,.(Customer, Employee = strsplit(pairs, "_")[1], Npairs)]
empcust3
empcust3 = empcust2[,.(Customer, Employee = strsplit(pairs, "_")[[1]], Npairs)]
empcust3
empcust3 = empcust2[,.(Customer, Employee = lapply(pairs, function(x) strsplit(x)[1]), Npairs)]
empcust2
empcust3 = empcust2[,.(Customer, Employee = lapply(pairs, function(x) strsplit(x, "_")[1]), Npairs)]
empcust3
empcust3 = empcust2[,Employee = strsplit(pairs, "_")[1]), by = c("Customer", "NPairs"))]
empcust3 = empcust2[,Employee = strsplit(pairs, "_")[1], by = c("Customer", "NPairs"))]
empcust3 = empcust2[,Employee = strsplit(pairs, "_")[1], by = c("Customer", "NPairs")]
empcust3 = empcust2[,Employee = strsplit(pairs, "_"), by = c("Customer", "NPairs")]
empcust3 = empcust2[,Employee = paste(strsplit(pairs, "_")[1]), by = c("Customer", "NPairs")]
empcust3 = empcust2[,Employee = unlist(strsplit(pairs, "_")[1]), by = c("Customer", "NPairs")]
str(empcust2)
gsub(' [A-z ]*', '' , 'my string is sad')
gsub('*[A-z ]_', '' , 'my string_is sad')
gsub('[A-z ]*_', '' , 'my string_is sad')
empcust3 = empcust2[,.(Customer, Employee = gsub('[A-z ]*_', '' , pairs), Npairs)]
empcust3
empcust3 = rbind(empcust2[,.(Customer, Employee = gsub('[A-z ]*_', '' , pairs), Npairs)],
empcust2[,.(Customer, Employee = gsub('_[A-z ]*', '' , pairs), Npairs)])
empcust3
empcust <- fread("C:/Users/IBM_ADMIN/Box Sync/ATB/Phase 2 Project/team_prototype/employee_cust.csv")
empcust[,freqEmp:=.N, by ="Employee"]
empcust
emp = unique(empcust[.(Employee, freqEmp)])
emp = unique(empcust[,.(Employee, freqEmp)])
emp
emp2 = unique(empcust2[,.(pairs, Npairs)])
emp2
emp3 = unique(rbind(emp2[,.(Employee = gsub('[A-z ]*_', '' , pairs), Npairs)],
emp2[,.(Employee = gsub('_[A-z ]*', '' , pairs), Npairs)]))
emp3
emp3 = unique(rbind(emp2[,.(Employee = gsub('[A-z ]*_', '' , pairs),  pairs,Npairs)],
emp2[,.(Employee = gsub('_[A-z ]*', '' , pairs), pairs, Npairs)]))
emp3
lift = merge(emp, emp3, all.x=T, by="Employee")
lift
emp3 = emp2
emp3[,`:=`(pair1 = gsub('[A-z ]*_', '' , pairs), pair2 = gsub('_[A-z ]*', '' , pairs))]
emp3
emp3
setkey(emp3, pair1)
setkeyv(emp3, "pair1")
setkeyv(emp, "Employee")
emp[emp3]
emp4 = emp[emp3]
emp4 = emp[emp4]
emp4
setkeyv(emp3, "pair1")
setkeyv(emp, "Employee")
emp4 = emp[emp3]
setkeyv(emp4, "pair2")
emp4 = emp[emp4]
emp4
empcust <- fread("C:/Users/IBM_ADMIN/Box Sync/ATB/Phase 2 Project/team_prototype/employee_cust.csv")
empcust[,freqEmp:=.N, by ="Employee"]
empcust[,Ncust=.N]
empcust
empcust[,Ncust=length(unique(Customer))]
empcust <- fread("C:/Users/IBM_ADMIN/Box Sync/ATB/Phase 2 Project/team_prototype/employee_cust.csv")
empcust[,freqEmp:=.N, by ="Employee"]
empcust[,Ncust:=length(unique(Customer))]
empcust
emp = unique(empcust[,.(Employee, freqEmp)])
#
empcust1 = empcust[,.(Employee=list(Employee)),by=Customer]
empcust1
empcust1[,pairs:=lapply(Employee, twoWay)]
tmp <- empcust1$pairs
empcust2 <- data.table(Customer=rep(empcust1$Customer,
times=sapply(tmp,length)),
pairs=unlist(tmp))
empcust2[,Npairs:=.N, by=pairs]
empcust2
emp2 = unique(empcust2[,.(pairs, Npairs)])
emp3 = emp2
emp3[,`:=`(pair1 = gsub('[A-z ]*_', '' , pairs), pair2 = gsub('_[A-z ]*', '' , pairs))]
emp3
setkeyv(emp3, "pair1")
setkeyv(emp, "Employee")
emp4 = emp[emp3]
setkeyv(emp4, "pair2")
emp4 = emp[emp4]
emp4
empcust <- fread("C:/Users/IBM_ADMIN/Box Sync/ATB/Phase 2 Project/team_prototype/employee_cust.csv")
empcust[,freqEmp:=.N, by ="Employee"]
empcust[,Ncust:=length(unique(Customer))]
empcust
emp = unique(empcust[,.(Employee, freqEmp, NCust)])
empcust1 = empcust[,.(Employee=list(Employee)),by=Customer]
empcust1[,pairs:=lapply(Employee, twoWay)]
tmp <- empcust1$pairs
times=sapply(tmp,length)),
empcust2 <- data.table(Customer=rep(empcust1$Customer,
empcust2[,Npairs:=.N, by=pairs]
empcust2
emp2 = unique(empcust2[,.(pairs, Npairs)])
emp3 = emp2
emp3[,`:=`(pair1 = gsub('[A-z ]*_', '' , pairs), pair2 = gsub('_[A-z ]*', '' , pairs))]
emp3
#
setkeyv(emp3, "pair1")
pairs=unlist(tmp))
setkeyv(emp, "Employee")
emp4 = emp[emp3]
empcust1
setkeyv(emp4, "pair2")
emp4 = emp[emp4]
emp4
emp4[,lift := Npairs]
# Count of customers per employee
empcust <- fread("C:/Users/IBM_ADMIN/Box Sync/ATB/Phase 2 Project/team_prototype/employee_cust.csv")
empcust[,freqEmp:=.N, by ="Employee"]
empcust[,Ncust:=length(unique(Customer))]
empcust
emp = unique(empcust[,.(Employee, freqEmp, NCust)])
emp = unique(empcust[,.(Employee, freqEmp, Nuust)])
emp = unique(empcust[,.(Employee, freqEmp, Ncust)])
#
empcust1 = empcust[,.(Employee=list(Employee)),by=Customer]
empcust1
empcust1[,pairs:=lapply(Employee, twoWay)]
tmp <- empcust1$pairs
empcust2 <- data.table(Customer=rep(empcust1$Customer,
times=sapply(tmp,length)),
pairs=unlist(tmp))
empcust2[,Npairs:=.N, by=pairs]
empcust2
emp2 = unique(empcust2[,.(pairs, Npairs)])
emp3 = emp2
emp3[,`:=`(pair1 = gsub('[A-z ]*_', '' , pairs), pair2 = gsub('_[A-z ]*', '' , pairs))]
emp3
setkeyv(emp3, "pair1")
setkeyv(emp, "Employee")
emp4 = emp[emp3]
emp4
setkeyv(emp4, "pair2")
emp4 = emp[emp4]
emp4
emp4[,lift := Npairs]
empcust <- fread("C:/Users/IBM_ADMIN/Box Sync/ATB/Phase 2 Project/team_prototype/employee_cust.csv")
empcust[,freqEmp:=.N, by ="Employee"]
empcust[,Ncust:=length(unique(Customer))]
empcust
emp = unique(empcust[,.(Employee, freqEmp, Ncust)])
emp
#
empcust1 = empcust[,.(Employee=list(Employee)),by=Customer]
empcust1
empcust1[,pairs:=lapply(Employee, twoWay)]
tmp <- empcust1$pairs
empcust2 <- data.table(Customer=rep(empcust1$Customer,
times=sapply(tmp,length)),
pairs=unlist(tmp))
empcust2[,Npairs:=.N, by=pairs]
empcust2
emp2 = unique(empcust2[,.(pairs, Npairs)])
emp3 = emp2
emp3[,`:=`(pair1 = gsub('[A-z ]*_', '' , pairs), pair2 = gsub('_[A-z ]*', '' , pairs))]
emp3
setkeyv(emp3, "pair1")
setkeyv(emp, "Employee")
emp4 = emp[emp3]
emp4
setkeyv(emp4, "pair2")
emp4 = emp[emp4]
emp4
emp4[,lift := Npairs]
emp4[,i.Ncust:=NULL]
emp4
emp4[,lift := (Npairs/lift)/((freqEmp/Ncust)*(i.freqEmp/Ncust))]
emp4
emp4[,lift := (Npairs/Ncust)/((freqEmp/Ncust)*(i.freqEmp/Ncust))]
emp4
emp4[,lift := (Npairs)/((freqEmp)*(i.freqEmp))]
emp4
# Count of customers per employee
empcust <- fread("C:/Users/IBM_ADMIN/Box Sync/ATB/Phase 2 Project/team_prototype/employee_cust.csv")
empcust[,freqEmp:=.N, by ="Employee"]
empcust[,Ncust:=length(unique(Customer))]
empcust
emp = unique(empcust[,.(Employee, freqEmp, Ncust)])
emp
#
empcust1 = empcust[,.(Employee=list(Employee)),by=Customer]
empcust1
empcust1[,pairs:=lapply(Employee, twoWay)]
tmp <- empcust1$pairs
empcust2 <- data.table(Customer=rep(empcust1$Customer,
times=sapply(tmp,length)),
pairs=unlist(tmp))
empcust2[,Npairs:=.N, by=pairs]
empcust2
emp2 = unique(empcust2[,.(pairs, Npairs)])
emp3 = emp2
emp3[,`:=`(pair1 = gsub('[A-z ]*_', '' , pairs), pair2 = gsub('_[A-z ]*', '' , pairs))]
emp3
setkeyv(emp3, "pair1")
setkeyv(emp, "Employee")
emp4 = emp[emp3]
emp4
setkeyv(emp4, "pair2")
emp4 = emp[emp4]
emp4[,i.Ncust:=NULL]
emp4
emp4[,lift := (Npairs)/((freqEmp)*(i.freqEmp))]
emp4
# Count of customers per employee
empcust <- fread("C:/Users/IBM_ADMIN/Box Sync/ATB/Phase 2 Project/team_prototype/employee_cust.csv")
empcust[,freqEmp:=.N, by ="Employee"]
empcust
emp = unique(empcust[,.(Employee, freqEmp)])
emp
#
empcust1 = empcust[,.(Employee=list(Employee)),by=Customer]
empcust1
empcust1[,pairs:=lapply(Employee, twoWay)]
tmp <- empcust1$pairs
empcust2 <- data.table(Customer=rep(empcust1$Customer,
times=sapply(tmp,length)),
pairs=unlist(tmp))
empcust2[,Npairs:=.N, by=pairs]
empcust2
emp2 = unique(empcust2[,.(pairs, Npairs)])
emp3 = emp2
emp3[,`:=`(pair1 = gsub('[A-z ]*_', '' , pairs), pair2 = gsub('_[A-z ]*', '' , pairs))]
emp3
setkeyv(emp3, "pair1")
setkeyv(emp, "Employee")
emp4 = emp[emp3]
emp4
setkeyv(emp4, "pair2")
emp4 = emp[emp4]
emp4
emp4[,lift := (Npairs)/((freqEmp)*(i.freqEmp))]
emp4
library(caret)
install.packages("caret")
library(caret)
# this is a one time effort - after this you have the package on your PC
install.packages("caret")
install.packages("readr")
install.packages("xgboost")
install.packages("ggplot2"); install.packages("R.utils"); install.packages("gridExtra")
install.packages("lubridate"); install.packages("data.table"); install.packages("Matrix")
install.packages("Hmisc"); install.packages("maps")
install.packages("maptools"); install.packages("sp"); install.packages("corrplot")
library(caret)
library(readr); library(xgboost); library(ggplot2)
library(R.utils); library(gridExtra); library(lubridate)
library(data.table); library(Matrix); library(plyr)
library(Hmisc); library(maps); library(maptools)
library(sp); library(corrplot)
library(caret)
install.packages("caret")
library(caret)
install.packages("caret")
library(caret)
setwd("C:/Users/IBM_ADMIN/Box Sync/TIPredict/data")
rm(list=ls())
cereals = read.csv("US_Cereals.csv")
str(cereals)
# Histogram of Sugars
hist(cereals$sugars, breaks=30)
# Focus on single variable first - sugars
library(plyr)
cereals$sugar_cut <-cut(cereals$sugar, c(-1,3,5,8,12,15))
plot(cereals$sugar_cut, main = "Sugar Cuts")
plot(ddply(cereals, .(sugar_cut), summarize, mean=mean(rating)),
main = "Mean Rating by Sugar Groups", ylim=c(0,60))
abline(h=mean(cereals$rating), col="red", lty=2)
legend(1,10, c("Group Mean","Overall Mean"), cex=0.8,
col=c("black","red"),  lty=1:2)
#Cut
cereals$sugar_cut <-cut(cereals$sugar, c(-1,3,5,8,12,15))
cereals$sodium_cut <-cut(cereals$sodium, c(-1,90,150,200,220,300))
model = lm(rating ~ (sugar_cut) -1 ,data=cereals)
summary(model)
model = lm(rating ~ sugar_cut ,data=cereals)
summary(model)
model = lm(rating ~ sugar_cut -1 ,data=cereals)
summary(model)
anova(model)
model = lm(rating ~ sugar_cut,data=cereals)
summary(model)
anova(model)
model = lm(rating ~ sugar_cut-1,data=cereals)
#summary(model)
anova(model)
model = lm(rating ~ (sugar_cut)-1,data=cereals)
#summary(model)
anova(model)
?lm
max(cereals$sugar_cut)
max(cereals$sugar)
cereals$sugar
cereals
max(cereals$sugars)
cereals$sugar_cut <-cut(cereals$sugar, c(-1,3,5,8,12,16))
setwd("C:/Users/IBM_ADMIN/Box Sync/TIPredict/data")
rm(list=ls())
cereals = read.csv("US_Cereals.csv")
str(cereals)
# Histogram of Sugars
hist(cereals$sugars, breaks=30)
# Focus on single variable first - sugars
library(plyr)
cereals$sugar_cut <-cut(cereals$sugar, c(-1,3,5,8,12,15))
plot(cereals$sugar_cut, main = "Sugar Cuts")
plot(ddply(cereals, .(sugar_cut), summarize, mean=mean(rating)),
main = "Mean Rating by Sugar Groups", ylim=c(0,60))
abline(h=mean(cereals$rating), col="red", lty=2)
legend(1,10, c("Group Mean","Overall Mean"), cex=0.8,
col=c("black","red"),  lty=1:2)
#Cut
cereals$sugar_cut <-cut(cereals$sugar, c(-1,3,5,8,12,16))
cereals$sodium_cut <-cut(cereals$sodium, c(-1,90,150,200,220,300))
# Model Single Variable
model = lm(rating ~ (sugar_cut)-1,data=cereals)
#summary(model)
anova(model)
model = lm(rating ~ sugar_cut,data=cereals)
#summary(model)
anova(model)
summary(model)
anova(model)
cereals[,c("sugars", "ratings")]
cereals
head(sugars$rating)
head(cereals$rating)
View(cereals$rating)
model = lm(rating ~ sugar_cut,data=cereals)
#summary(model)
anova(model)
# Model Single Variable
View(cereals$rating)
model = lm(rating ~ sugar_cut,data=cereals)
anova(model)
setwd("C:/Users/IBM_ADMIN/Box Sync/TIPredict/data")
rm(list=ls())
cereals = read.csv("US_Cereals.csv")
str(cereals)
# Histogram of Sugars
hist(cereals$sugars, breaks=30)
# Focus on single variable first - sugars
library(plyr)
cereals$sugar_cut <-cut(cereals$sugar, c(-1,3,5,8,12,15))
plot(cereals$sugar_cut, main = "Sugar Cuts")
plot(ddply(cereals, .(sugar_cut), summarize, mean=mean(rating)),
main = "Mean Rating by Sugar Groups", ylim=c(0,60))
abline(h=mean(cereals$rating), col="red", lty=2)
legend(1,10, c("Group Mean","Overall Mean"), cex=0.8,
col=c("black","red"),  lty=1:2)
#Cut
cereals$sugar_cut <-cut(cereals$sugar, c(-1,3,5,8,12,16))
cereals$sodium_cut <-cut(cereals$sodium, c(-1,90,150,200,220,300))
# Model Single Variable
model = lm(rating ~ sugar_cut,data=cereals)
anova(model)
7944/4
7944/4
View(7944/4)
View(7944.42/4)
model = lm(round(rating,5) ~ sugar_cut,data=cereals)
anova(model)
model = lm(round(rating,4) ~ sugar_cut,data=cereals)
anova(model)
model = lm(round(rating,3) ~ sugar_cut,data=cereals)
anova(model)
model = lm(round(rating,2) ~ sugar_cut,data=cereals)
anova(model)
View(7944.42/4)
model = lm(round(rating,1) ~ sugar_cut,data=cereals)
anova(model)
model = lm(round(rating0) ~ sugar_cut,data=cereals)
anova(model)
model = lm(round(rating) ~ sugar_cut,data=cereals)
anova(model)
7052.38 / 72
dim(cereals)
dim(cereals)
anova(model)
summary(model)
cereals$sugar = NULL
dim(cereals)
cereals$sugars = NULL
dim(cereals)
nrow(cereals)
# Dimensions of File
nrow(cereals)
model = lm(rating ~ sugar_cut,data=cereals)
anova(model)
summary(model)
?pf
library(ggplot2)
data(faithful)
nrow(faithful)
data(mtcars)
data(mpg)
head(mpg)
head(mtcars)
qplot(disp, mpg, data = mtcars, geom = c("point", "smooth"))
qplot(mpg, wt, data = mtcars)
str(mtcars)
str(mpg)
qplot(mpg, wt, data = mtcars, facets = am)
qplot(mpg, wt, facets = am, data = mtcars)
str(mtcars)
qplot(mpg, wt, facets = vs, data = mtcars)
qplot(x = mpg, y = wt, facets = vs, data = mtcars)
qplot(x = mpg, y = wt, facets = "vs", data = mtcars)
qplot(x = mpg, y = wt, facets = .amf, data = mtcars)
qplot(x = mpg, y = wt, facets = .~amf, data = mtcars)
qplot(x = mpg, y = wt, facets = .~amf, data = mpg)
data(mtcars)
names(mtcars)
qplot(x = mpg, y = wt, facets = .~am, data = mpg)
qplot(x = mpg, y = wt, facets = .~amf, data = mpg)
data(mtcars)
names(mtcars)
qplot(x = mpg, y = wt, facets = .~amf, data = mpg)
qplot(x = mpg, y = wt, facets = .~amf, data = mtcars)
data(mtcars)
names(mtcars)
qplot(x = wt, y = mpg, facets = .~amf, data = mtcars)
data(mtcars)
names(mtcars)
qplot(x = wt, y = mpg, facets = .~amf, data = mtcars, main = "MPG vs.... ")
library(ggplot2)
data(faithful)
nrow(faithful)
data(mtcars)
data(mpg)
head(mpg)
head(mtcars)
mtcars$disp; mtcars$mpg
ggplot(mtcars, aes(x = disp, y = mpg))
data(mtcars)
names(mtcars)
qplot(x = wt, y = mpg, facets = .~amf, data = mtcars, main = "MPG vs.... ")
qplot(x = wt, y = mpg, facets = .~am, data = mtcars, main = "MPG vs.... ")
str(mtcars)
qplot(x = wt, y = mpg, facets = .~vs, data = mtcars, main = "MPG vs.... ")
qplot(x = wt, y = mpg, facets = vs~., data = mtcars, main = "MPG vs.... ")
qplot(x = wt, y = mpg, facets = .~vs~., data = mtcars, main = "MPG vs.... ")
qplot(x = wt, y = mpg, facets = vs~am, data = mtcars, main = "MPG vs.... ")
qplot(x = wt, y = mpg, facets = .~am, data = mtcars, main = "MPG vs.... ")
data(mtcars)
str(mpg)
